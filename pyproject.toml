[project]
name = "kiro-project"
version = "0.1.0"
description = "Folder file processor application"
requires-python = ">=3.12"
dependencies = [
    "watchdog==3.0.0",
    "python-dotenv==1.0.0",
    # RAG store dependencies
    "chromadb>=1.0.17",
    "langchain>=0.3.27",
    "langchain-chroma>=0.2.5",
    "langchain-community>=0.3.27",
    "langchain-google-genai>=2.0.10",
    "langchain-openai>=0.2.0",
    "pypdf>=5.1.0",
    "structlog>=24.1.0",
    "prometheus-client>=0.21.0",
    # Additional dependencies required by dependency validation
    "google-generativeai>=0.3.0",
    "cryptography>=3.1",
    "unstructured[all-docs]>=0.18.14",
    "langchain-unstructured>=0.1.6",
    "pymupdf>=1.26.4",
    "pytesseract>=0.3.13",
    "pillow>=11.3.0",
]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.2.1",
    "pytest-timeout>=2.1.0",
    "bandit[toml]>=1.7.0",
    "safety>=2.3.0",
]

# Coverage configuration for trunk-based development (85% minimum per file)
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
    "*/setup.py",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
# Total project coverage requirement (90%)
fail_under = 90.0
precision = 1
show_missing = true
skip_covered = false
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods
    "@(abc\\.)?abstractmethod",
    # Don't complain about type checking imports
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"
title = "RAG File Processor Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# Per-file coverage requirements (85% minimum)
# This is enforced by the CI pipeline custom script
[tool.coverage.paths]
source = [
    "src/",
    "*/site-packages/",
]

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101"]  # Skip assert statements in tests

# Additional pytest configuration in pyproject.toml format
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--color=yes",
    "--tb=short",
    "--durations=10",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "rag: marks tests that require RAG functionality",
    "docker: marks tests that require Docker environment",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore:.*unclosed.*:ResourceWarning",
]
