# Development Environment for Kiro Project
# Copy this file to .env.local and customize the values below

# === Required Settings ===

# Folder paths for file processing (customize these paths)
SOURCE_FOLDER=~/tmp/rag_store/source
SAVED_FOLDER=~/tmp/rag_store/saved
ERROR_FOLDER=~/tmp/rag_store/error

# Document processing configuration
ENABLE_DOCUMENT_PROCESSING=true
DOCUMENT_PROCESSOR_TYPE=rag_store

# AI Model vendor (choose one: google or openai)
MODEL_VENDOR=google

# API Keys (provide the key for your chosen vendor)
GOOGLE_API_KEY=your_google_key_here
# OPENAI_API_KEY=your_openai_key_here

# === Development-specific Settings ===

# Application logging (DEBUG for development, INFO for production)
LOG_LEVEL=DEBUG

# File monitoring configuration (optimized for Docker)
FILE_MONITORING_MODE=auto               # Options: auto, events, polling
POLLING_INTERVAL=2.0                    # Seconds (for polling mode)
DOCKER_VOLUME_MODE=true                 # Enable Docker volume optimizations

# ChromaDB mode. The client_server or embedded.
CHROMA_CLIENT_MODE=client_server        # Options: client_server, embedded

# ChromaDB server settings (if using client_server mode)
CHROMA_SERVER_HOST=chromadb
CHROMA_SERVER_PORT=8000

# ChromaDB vector storage configuration for embedded mode.
#CHROMA_DB_PATH=./data/chroma_db_dev     # Development database path
#CHROMA_COLLECTION_NAME=rag-kb           # Collection name for documents

# === Quick Start Instructions ===
# 1. Copy this file: cp .env.development .env.local
# 2. Edit .env.local with your actual paths and API keys
# 3. Create the source/saved/error directories
# 4. Run deployment: ./deploy.sh [image-name] .env.local